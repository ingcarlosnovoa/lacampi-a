/*
 * https://naylampmechatronics.com/blog/38_tutorial-arduino-y-memoria-sd-y-micro-sd.html
 * https://www.arduinolibraries.info/libraries
 * https://www.luisllamas.es/tarjeta-micro-sd-arduino/
 * https://www.couponcarrier.io/code-generator/
 * 
*/
#include <SD.h>
#include <Password.h>
#include <LiquidCrystal.h>
#include <Keypad.h>
#include <Servo.h>
//Servo myservo;
int pos = 0;

const int rs = 8, en = 9, d4 = 4, d5 = 5, d6 = 6, d7 = 7;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

Password password = Password( "4321" );
const byte ROWS = 4; // Four rows
const byte COLS = 3; // Three columns
// Define the Keymap
char keys[ROWS][COLS] = {
{'1','2','3',},
{'4','5','6',},
{'7','8','9',},
{'*','0',' ',}
};
// Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte rowPins[ROWS] = {25, 24, 23, 22}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {28, 27, 26}; //connect to the column pinouts of the keypad
const int buttonPin = 7;
int buttonState = 0;

// Create the Keypad
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

#define ledPin 13

void setup(){
myservo.attach(8);
pinMode(buttonPin, INPUT);
lcd.begin(16, 2);
digitalWrite(ledPin, LOW); // sets the LED on
Serial.begin(9600);
keypad.addEventListener(keypadEvent); //add an event listener for this keypad
keypad.setDebounceTime(250);
}

void loop(){
keypad.getKey();
buttonState = digitalRead(buttonPin);
if (buttonState == HIGH) {
lcd.clear();
}
}

//take care of some special events
void keypadEvent(KeypadEvent eKey){
switch (keypad.getState()){
case PRESSED:
lcd.print(eKey);
switch (eKey){
case ' ': guessPassword(); break;
default:
password.append(eKey);
}
}}

void guessPassword(){
if (password.evaluate()){
digitalWrite(ledPin,HIGH); //activates garaged door relay
delay(500);
for(pos = 0; pos < 180; pos += 1) // goes from 0 degrees to 180 degrees
{ // in steps of 1 degree
myservo.write(pos); // tell servo to go to position in variable 'pos'
delay(3); // waits 15ms for the servo to reach the position
}
for(pos = 180; pos>=50; pos-=1) // goes from 180 degrees to 0 degrees
{
myservo.write(pos); // tell servo to go to position in variable 'pos'
delay(3); // waits 15ms for the servo to reach the position
}

digitalWrite(ledPin,LOW); //turns off door relay after .5 sec
lcd.print("VALID PASSWORD "); //
password.reset(); //resets password after correct entry
delay(600);
lcd.print("Welcome");
delay(2000);
lcd.clear();
}


else{
digitalWrite(ledPin,LOW);
lcd.print("INVALID PASSWORD ");
password.reset(); //resets password after INCORRECT entry
delay(600);
lcd.clear();
}
}

/*
110200
130589
133641
135937
160452
160776
161969
169911
171043
172528
191900
211720
218916
222379
233769
236916
238794
239635
240700
243152
252061
259320
261105
265825
266361
270345
271969
276371
286239
291753
293021
293394
298343
303063
375040
382231
388988
390488
397617
408449
410600
413373
415804
416046
423825
427227
439150
443606
444749
446162
452612
456076
461960
462647
485070
485800
496133
500347
504908
506064
506757
510638
522435
523734
527304
535979
541757
546347
574605
587314
591040
593342
594363
598519
620294
623318
623756
630108
636555
636968
640583
654305
658672
667079
667748
676374
678507
681062
682229
688719
718874
731264
731305
732204
740080
771071
771482
782723
793653
806740
814789
826114
839256
848569
854686
871520
877535
886822
899355
902371
906230
913681
915916
923240
951693
953124
969649
982059
41643B
DD485A
2CD632
851A34
8A9489
A0B61D
A65A65
602D61
6AD538
3CD88C
6C2D04
2547A4
B5D865
8A6426
6418B9
4BCC37
B57647
D1029D
8241B5
90B2AA
0B7307
721BB1
585B31
DAD907
759D93
52299A
20DA18
572A72
615DBC
5C181C
13D6A4
D1290D
0D4226
9C11AC
1904C1
63628D
281C48
79C268
417D94
C3B022
C99616
B0C437
2202C0
C3D06A
8B198A
432CDD
0810AD
96913D
DA52D2
71A478
1760A6
DB4D46
1622B0
A7BC65
95284C
646DA2
0B3604
BB5280
808A02
294DC7
C3151A
2D3209
212C68
2C9CA9
5121CB
C59A80
2C4537
464DDC
15D259
38B19B
03B27B
8BC99B
89624D
44996D
43C00D
2C4140
455B05
2A9426
18BA42
B912A0
B69A4D
BC3CC1
494D37
74D37A
4A42B0
A84B6D
A82669
61A8DC
9CC1C1
32CA54
B315A8
C459A4
A4CC74
881D72
65C6CA
36A078
94B9A8
4696CD
94C900
5B508D
AA3B5C
A535CB
ACB242
AAD785
1B0056
9A0731
BC0801
D8028C
D82D39
7B163A
B09527
00B278
44308B
24D15D
74C826
60248B
861AB7
D41390
56D620
D67ADA
C92C07
2AB605
5CAB68
6CDA24
B7DAC5
AD5A68
D3CD28
09A2B5
B61119
B27768
17C4AA
67627C
C2BD91
6B8949
D4BC99
AA4666
CA08AD
734AD5
7932AB
91B106
BD3650
C950C6
7C0A47
A2A4BA
998CD4
95BA30
A1041C
34CB45
AB1A58
06D3C8
B13336
8B7C2A
C481AC
54D8D6
DDD64A
92A230
BA9623
10A68D
3A7DBA
714AA7
1202D7
0B071D
C07792
A7772D
C23254
8A07D0
68B637
A7420B
395AD1
5A3151
CBDCB9
1756C2
D33859
B33752
40B640
C20D83
4B0B78
46D07A
362B0A
066104
BD4915
990B40
078C9A
19399C
4A10A2
C67A45
C99C2B
88BCD7
B1586B
90986C
68103D
111C9D
9C5629
00B72A
9CB176
5116D1
4DC221
C83358
ADD966
8BC72A
1855C2
DC7CC9
20BD6C
CB2253
70732C
5D9C2A
A62754
BD0898
462BC5
AB879A
97A999
18637B
9031B3
3323B7
178A85
5C54A4
C8A55A
CBB4A4
2C1748
C7540A
42726B
13A025
33CD64
D0C237
B110C3
0D143D
65A3D1
87B369
21C291
2630CB
31184D
9C3D08
2CAC45
C78957
3899A7
BA1B3B
3580D5
CAD8D5
815AB7
59B07C
75139D
0BAC65
941A21
BB931A
D9C704
400B49
D578B7
80016A
D0A348
64B350
CC7009
C54BB1
B61A9B
D0C796
57CBC1
583CA9
95633B
873B80
1074DD
28DA74
258C22
413A75
8CBC20
A7698D
B11836
5D7A6C
10143B
079AB5
572B66
98DBB9
1D0C69
D908C1
1A5120
60105B
C81099
0B052B
ACB737
9B70A8
91DA7C
BC6278
12DAAD
D44D64
92207D
C65314
49499A
381B8D
DC9745
7980D4
47A527
9B6C4D
9433CD
8C6973
D667B6
89DCBC
9DBD6B
D05100
0BBA7B
51CDB0
8B2600
059098
917D9C
C3193D
37CC4D
B11C3A
59AC27
4CC1B5
D62AA1
95260D
31B4A5
C225A9
2D7B0A
B2324C
3ADAA9
088AAD
C80C49
6C504C
416CDD
1582DC
B5546D
CC9A8B
DDC252
21262D
38D004
5DBD36
CB752B
23B6B2
86A3D9
1D378D
38AC11
059456
769D31
648A82
050D71
BD8079
D079AB
586BC3
5DCDC7
195DA5
1CBB40
DB9023
3A0204
D16ABC
6293AA
AB9532
B85B87
7CC208
81D560
340DDD
A6B149
C97A56
AA71A3
9537C1
A7B7C1
97C623
9B5398
094D10
C0B464
BA867C
4C7CC3
C9DA40
47AABA
B88C69
D6C334
681C64
9D1501
7C2325
8BB06A
56B145
0B4073
4BADBA
1AD93D
14C006
2AA261
47B5DC
02DD44
310AD9
94075A
0942D5
0996D5
98995D
28A958
A1C61B
28A177
A89C3C
D69BB3
8CB726
D98816
2C15B8
5B3B18
689B90
2D6545
93C43C
02D924
9CD346
5069C3
DA1B30
8C2A7A
5B8BC5
DAD403
76D469
6BB403
6480AA
AA588C
1B1C15
5633C2
0D38CA
CA380D
DC0B72
556D4C
3990B7
020D26
7027B0
A1C279
8D5C86
0D1713
4406B6
C826DA
5D0CCA
3ADC21
113B0A
B34360
3A38A8
D1722D
3D334D
74BB34
BC5CD4
C47325
7C354A
4714A8
0000AA
A2099C
3DCD60
AB411D
D0426D
1DD806
1DCD26
53D157
1D8518
D9DC51
3A64D9
0CB887
2CA243
5D077C
7B018A
89A66D
761A5C
14D559
3BDD1D
85B8A1
409BD0
C7B700
B00967
C61534
82B6D8
8B04CB
B6DA96
8A4141
7BDB61
C86316
33CB52
3B48D3
AAB648
CC4200
0488A6
033BCD
62BCAB
441ADD
8302D6
D12369
C6435B
052C23
5CC732
9B9784
96B187
D88435
0C0870
DB75C4
750B93
545C08
77688B
BA424C
06C643
DCC67B
3BC0B1
169C07
C13B18
547BB6
7AD796
00D223
1D607B
3A5A78
69142A
12B844
83B5A5
63720D
80B878
6A39B1
47A21C
BCC796
496D11
AD13AA
D979D7
05033A
678A6B
C362BB
570B63
8627BA
8B389B
B4AB26
889D36
757BD2
58B634
2D7B38
80732C
D07186
6B5342
1D269D
5CD337
9095A8
749A55
6AD0DC
46B421
B59CB1
AA1159
A4379D
0CB528
B32581
2A9DC8
7A5500
B8CD57
9A2141
C927D5
71A8B8
766A10
CDC454
7DA48C
698A28
719B3C
76BAA3
0DCDDB
64DA8A
8A9288
C4D59B
949C33
67B27A
41228A
854A2A
7392A5
A17406
2D4D7A
A84CC7
7DD7B7
B72CA4
D95668
6B15B6
C7061D
D259D4
A85A84
C19B85
67B175
2C1A90
78D782
3113D9
CC0606
D6A2A6
A93A39
898A34
A04001
A35C8A
9CB793
19319B
69BB5C
BD6A36
A7D0AD
18D385
55A980
D71035
03D647
6D67A3
8A1A7B
C00923
4540C1
2504A9
75B366
465AD8
5737B4
2B8287
595C18
D030DC
04AB01
CC8A78
004616
D26876
A3C699
45DD57
BB5A0C
6CD810
BD5A79
73BD48
839C86
0806DB
7D5A6C
363C34
98C74D
AB6C00
6C471D
4C1126
C92067
7B6648
022555
CA62DA
D00752
038BAD
6DC067
D667D8
726BB6
D4C2B3
46C0CC
3BCC61
C170D7
6B3427
A5757D
A6BDBA
4B876B
24C84C
48A929
113D5D
128B8B
14BB39
52263D
71B356
CB88B6
1845B3
D7D483
51B6AC
A69B87
1223BB
6D1793
DC0099
9A8D44
A15730
768CD0
D70ABC
1A4C8A
96ADC9
233C97
07485C
522C14
636BBB
15DA79
96D926
3DB6D8
5B3BA3
04C11A
6708A1
D606D0
6C0869
14B72B
3C724D
0D9469
C8857D
91737D
19A794
04631D
0BA945
3CCC3D
D92515
53D77A
D26920
0AC3CA
0B7783
4B39BD
5812C6
05348C
624A9B
722CC8
0D4CAC
90C153
83C256
265B90
71D736
C82419
D98C0A
954B2C
758A95
66B285
5A3421
A7096A
035B64
559B9D
B419B2
0A6D63
A5A478
C4A596
9A1910
66C386
A33C3C
4266C9
C731DD
01818D
BA4A44
D1942C
5BC164
3B2C29
7DC65A
1D7250
98997C
A6058C
D21A51
40D753
7A0403
5D96D2
5953B0
4C18C1
C52384
59A740
43D88C
BC3D53
3D0237
CC8822
3DAD64
3DA171
19B045
DC27B1
95BB95
2DA3B7
1ABB6A
1C3D04
A99818
8800CD
70782B
5A9A05
7A5844
D42BAA
592B85
485A60
5A88B5
28A9C7
C1970B
209B97
3194DD
1B008C
12147B
9CC217
5014B8
99066A
3AB4B2
37CA7B
D93AA6
9C86CB
60BB78
90803C
16B589
D41755
594DD2
CB0136
5C6760
3C1D1B
22B657
214C78
1DA354
30601A
A15897
9B80D4
15DD99
07A1A8
0940D3
CD7235
763B0B
35A7C6
0953DD
B8A883
85A23C
AC551B
689B9D
C518C6
68C91C
4C6852
4A265C
1AC538
5A8DBD
98A9C4
9BD09D
B02893
4BBD3A
49882C
C67902
BD0C48
20AB2D
C661CB
C8AB66
8153C6
013501
B3C470
207C1C
2CC58A
C69690
644C57
D649DC
490B6D
4AB994
7534A7
3C679B
95D113
15097D
7AC880
9C8D4A
6789B1
90837D
84BB8A
0ACAA0
C3D45D
D78A15
85693D
47507C
9B9039
D495C6
9BB176
885D36
A6A641
CBCAD6
80D55C
B0A84C
C89789
C7D520
D11006
074933
010190
73200D
A78816
D3BBC2
B976D7
45B8A3
B010BD
2483AC
86D224
ADB764
84C72B
216A7A
03C26A
66A2D0
545B94
3B39D8
9AC65C
03DA2A
C95D19
0C99A8
42A523
B0772B
446D06
048C37
071895
DD6043
A976DB
C4DA40
132C78
56A936
94A7B9
16D92D
55B586
2D714B
7D08B6
A851DB
A2C183
4A2040
C5D93A
5815A7
38B8A1
7769DA
7287D7
B7AA16
4484C3
189B34
BC63C0
296B69
D9C5B6
D038CD
82B5B4
D2C8DB
B39110
639B87
95627B
 */
